@using System.Text.RegularExpressions
@using CMVProject.Controllers
@using CMVProject.Models

@inject UserController Controller
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudItem>
            <MudPaper>
                <MudForm @ref="_form" @bind-IsValid="@_success">

                    <MudTextField T="string" Label="Логин кладовщика" @ref="_login" Validation="@(new Func<string, string?>(LoginValidation))"
                                  Required="true" RequiredError="Поле логина должно быть заполнено!"/>

                    <MudTextField T="string" Label="Фамилия кладовщика" Required="true" RequiredError="Поле фамилии должно быть заполнено!" @ref="_surname"/>

                    <MudTextField T="string" Label="Имя кладовщика" Required="true" RequiredError="Поле имени должно быть заполнено!" @ref="_name"/>

                    <MudTextField T="string" Label="Отчество кладовщика" Required="true" RequiredError="Поле отчества должно быть заполнено!" @ref="_patronymic"/>

                    <MudTextField T="string" Label="Пароль для аккаунта кладовщика" HelperText="Придумайте надёждный пароль" @ref="_password"
                                  InputType="InputType.Password"
                                  Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                                  RequiredError="Поле пароля должно быть заполнено!"/>

                    <MudTextField T="string"
                                  Label="Пароль для аккаунта кладовщика" HelperText="Повторите пароль" InputType="InputType.Password"
                                  Validation="@(new Func<string, string?>(PasswordMatch))"/>

                </MudForm>
            </MudPaper>
        </MudItem>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Отмена</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Добавить</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = new();


    private bool _success;
    private MudTextField<string> _password = new(), _login = new(), _surname = new(), _name = new(), _patronymic = new();
    private MudForm _form = new();

    void Cancel() => MudDialog.Cancel();

    private static IEnumerable<string> PasswordStrength(string password)
    {
        if (string.IsNullOrWhiteSpace(password))
        {
            yield return "Поле пароля должно быть заполнено!";
            yield break;
        }

        if (password.Length < 8)
            yield return "Пароль должен состоять хотя бы из 8 символов";

        if (!Regex.IsMatch(password, @"[A-Z]"))
            yield return "Пароль должен содержать хотя бы одну латинскую заглавную букву";

        if (!Regex.IsMatch(password, @"[a-z]"))
            yield return "Пароль должен содержать хотя бы одну латинскую строчную букву";

        if (!Regex.IsMatch(password, @"[0-9]"))
            yield return "Пароль должен содержать хотя бы одну цифру";
    }

    private string? PasswordMatch(string password)
    {
        return _password.Value != password ? "Пароли не совпадают" : null;
    }

    private string? LoginValidation(string login)
    {
        return Controller.GetAllUsers().Any(user => user.Login == login) ? "Кладовщик с таким логином уже существует" : null;
    }

    private void Submit()
    {
        _form.Validate();

        if (!_success)
            return;

        Controller.RegisterUser(new User
        {
            Login = _login.Value, Password = _password.Value, Name = _name.Value,
            Surname = _surname.Value, Patronymic = _patronymic.Value
        });

        Snackbar.Add("Кладовщик успешно добавлен", Severity.Success);
        MudDialog.Close(DialogResult.Ok(true));
    }

}